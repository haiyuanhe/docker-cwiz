partition
virtual_node_replica_num = 10
current_node_name = <:alertd_hostname:>
node_names = <:alertd_hostnames:>
server
metrics_server_url = <:nginx_protocol:>://<:nginx_ip:>:<:nginx_port:>/_tsdb
tsdb_uid_table = tsdb-uid
http_server_host = <:host_ip:>
http_server_port = 5001
mysql_host = <:nginx_ip:>
mysql_port = 3308
mysql_username = <:mysql_username:>
mysql_password = <:mysql_password:>
mysql_url = jdbc:mysql://<:nginx_ip:>:3308/<:grafana_database:>?useUnicode=true&characterEncoding=utf8&useSSL=<:ssl_enable:>

mysql.ssl.enabled = <:ssl_enable:>
mysql.ssl.keyStore = <:install_root:>/certs/mysql/client.jks
mysql.ssl.keyStorePassword = <:ssl_password:>
mysql.ssl.trustStore = <:install_root:>/certs/mysql/truststore.jks
mysql.ssl.trustStorePassword = <:ssl_password:>

alert_notifiers = com.cloudwiz.daemon.plugins.notification.USEmailTextingAlertNotifier
anomalyDetectionEnabled = true
fetchmetricDataEnabled = true
findFrequencyEnabled = true
LBDetectionEnabled = false
RCAEnabled = false
patternMatcherEnabled = true
metricClusteringEnabled = false
showGCAnomaly = true
log_processor_url = <:nginx_protocol:>://<:nginx_ip:>:9502
anomalyDetectionAlg = decompositionAndTaylor

#anomaly config
minutelyDataCachedHours = 24
anomalyDownSamplingMinutes = 15
anomalyDataCachedHours = 18
checkAnomalyForAllMetrics = true
fetch1MinDataForAllMetrics = true

correlationScheduleIntervalMinutes = 1

# cmdb
cmdb_service = <:nginx_protocol:>://<:nginx_ip:>:<:nginx_port:>/_cmdb
max_connection = 100
max_connection_per_route = 20
ssl.connection.enabled = <:ssl_enable:>
ssl.client.keystore = <:install_root:>/certs/nginx/client.jks
ssl.client.key.password = <:ssl_password:>
ssl.client.keystore.password = <:ssl_password:>
ssl.client.trust.keystore = <:install_root:>/certs/nginx/clientTrust.jks
ssl.client.trust.keystore.password = <:ssl_password:>

tsdb.ssl.connection.enabled = <:ssl_enable:>
tsdb.ssl.client.keystore = <:install_root:>/certs/nginx/client.jks
tsdb.ssl.client.key.password = <:ssl_password:>
tsdb.ssl.client.keystore.password = <:ssl_password:>
tsdb.ssl.client.trust.keystore = <:install_root:>/certs/nginx/clientTrust.jks
tsdb.ssl.client.trust.keystore.password = <:ssl_password:>
ignored_metrics = SystemHealth,AlertState,alertd.,cloudwiz.,collector.,internal.

alertd.ssl.enabled = <:ssl_enable:>
#1：单向认证，2：双向认证
alertd.ssl.authority = 2
alertd.ssl.certificate = <:install_root:>/certs/alertd/server.crt
alertd.ssl.keystore = <:install_root:>/certs/alertd/server.jks
alertd.ssl.key.password = <:ssl_password:>
alertd.ssl.keystore.password = <:ssl_password:>
alertd.ssl.trust.keystore = <:install_root:>/certs/alertd/serverTrust.jks
alertd.ssl.trust.keystore.password = <:ssl_password:>

alertd.secret.key = <:secret_key:>

# reporting
pandoc=<:install_root:>/pandoc/bin/pandoc
pdf_engine=<:install_root:>/wkhtmltox/bin
phantomJS=<:install_root:>/phantomjs/bin/phantomjs
tmpFolder=/tmp
keepTmp=true

# elasticsearch
elasticsearch_url = <:nginx_protocol:>://<:nginx_ip:>:9202
elastic_connect_timeout = 60000
elastic_request_timeout = 60000
elastic_socket_timeout = 60000

# membership service
cluster.reg.center.url = <:nginx_ip:>:2182
clusteringDataCachedHours = 1
clusteringDataHoursNeeded = 48
#cluster.reg.center.digest =
cluster.reg.center.namespace = alertd_cluster
# current node max register time
cluster.reg.max.starting.millisecond = 3000
# delay time in millisencond
cluster.reg.delay.notify.millisecond = 1000
# max delay time of current node starting
cluster.reg.delay.max.millisecond = 6000

# email SMTP Server
smtp_host = smtp.exmail.qq.com
smtp_port = 25
enable_ssl = false
# email sender Info
email_account =
email_password =

# 警告类的报警是否需要发送
email_send_warning = false
other_send_warning = false

#log analysis
log_analysis_service = <:nginx_protocol:>://<:nginx_ip:>:<:nginx_port:>/_log

#告警压缩
alert_realtime_reduce_python_url = http://<:nginx_ip:>:8102
#
#unit minutes
alert_realtime_reudce_same_alert_traceable_time = 15

#告警压缩 task 配置  前缀固定, 后缀为类名  Unit: minutes
alert_realtime_reudce_task.TransferGroupToHistoryTask = 30

#permission 从permission获取信息的baseURL
permission_service = <:nginx_protocol:>://<:nginx_ip:>:4124

# 设置是否发送报警通知到Kafka，默认设置为不发送
sendAlertToKafka = false

alert_skip_host_check_metric_prefix=apache,redis,tomcat

# Topology discovery
TopoTaskIntervalMins = 5
TopoDiscoveryEnabled = true
TopoIPAsHostName = false

# 配置是否发送语音
alertVsms = true
# 当系统宕机导致通知消息队列消息丢失之后，系统再次启动重新从数据库加载备份的通知消息。设置加载消息的时长，默认加载十分钟之前(单位分钟)
notifyLoadFrom = 10

hbase.kerberos.enabled = <:ssl_enable:>
hadoop.security.authentication = kerberos
hbase.security.authentication = kerberos
hbase.rpc.protection = authentication
hbase.regionserver.kerberos.principal = hbase/_HOST@CWIZ.COM
hbase.master.kerberos.principal = hbase/_HOST@CWIZ.COM
java.security.krb5.realm = CWIZ.COM
java.security.krb5.kdc = 172.19.0.40
sun.security.krb5.debug = false
hbase.user = hbase/alertd@CWIZ.COM
hbase.keytab = <:install_root:>/certs/kerberos/hbase.keytab

zookeeper.kerberos.enabled = <:ssl_enable:>
zookeeper.krb5.realm = CWIZ.COM
zookeeper.krb5.kdc = 172.19.0.40
zookeeper.login.config = <:install_root:>/alertd/conf/jaas.conf