CMDB.connect.cmdb_service = <:nginx_protocol:>://<:nginx_ip:>:<:nginx_port:>/_cmdb

Grok.patterns = <:install_root:>/log-pp/config/patterns/grok-patterns

# Connections settings to CMDB
HttpClient.max_connection = 200
HttpClient.max_connection_per_route = 20
HttpClient.ssl.connection.enabled = <:ssl_enable:>
HttpClient.ssl.client.keystore = <:install_root:>/certs/nginx/client.jks
HttpClient.ssl.client.key.password = <:ssl_password:>
HttpClient.ssl.client.keystore.password = <:ssl_password:>
HttpClient.ssl.client.trust.keystore = <:install_root:>/certs/nginx/clientTrust.jks
HttpClient.ssl.client.trust.keystore.password = <:ssl_password:>


Kafka.connect.bootstrap.servers = <:nginx_ip:>:9092
Kafka.connect.key.serializer = org.apache.kafka.common.serialization.StringSerializer
Kafka.connect.value.serializer = org.apache.kafka.common.serialization.StringSerializer

Kafka.ssl.connection.enabled = <:ssl_enable:>
Kafka.ssl.client.keystore = <:install_root:>/certs/kafka/client.jks
Kafka.ssl.client.key.password = <:ssl_password:>
Kafka.ssl.client.keystore.password = <:ssl_password:>
Kafka.ssl.client.trust.keystore = <:install_root:>/certs/kafka/truststore.jks
Kafka.ssl.client.trust.keystore.password = <:ssl_password:>

# these are consumer settings, they are not needed
#Kafka.connect.auto.offset.reset = earliest
#Kafka.connect.enable.auto.commit = false
#Kafka.connect.group.id = log-pp
#Kafka.connect.key.deserializer = org.apache.kafka.common.serialization.StringDeserializer
#Kafka.connect.value.deserializer = org.apache.kafka.common.serialization.StringDeserializer
#Kafka.connect.session.timeout.ms = 120000
#Kafka.connect.heartbeat.interval.ms = 4000
#Kafka.connect.max.poll.records = 200

Kafka.topic.prefix = filebeat

Opentsdb.connect.tsdb.ssl.connection.enabled = <:ssl_enable:>
Opentsdb.connect.tsdb.ssl.client.keystore = <:install_root:>/certs/nginx/client.jks
Opentsdb.connect.tsdb.ssl.client.key.password = <:ssl_password:>
Opentsdb.connect.tsdb.ssl.client.keystore.password = <:ssl_password:>
Opentsdb.connect.tsdb.ssl.client.trust.keystore = <:install_root:>/certs/nginx/clientTrust.jks
Opentsdb.connect.tsdb.ssl.client.trust.keystore.password = <:ssl_password:>


Opentsdb.connect.metrics_server_url = <:nginx_protocol:>://<:nginx_ip:>:<:nginx_port:>/_tsdb
Opentsdb.connect.mysql_url = jdbc:mysql://<:nginx_ip:>:3308/<:grafana_database:>?useUnicode=true&characterEncoding=utf8&useSSL=<:ssl_enable:>
Opentsdb.connect.mysql_username = <:mysql_username:>
Opentsdb.connect.mysql_password = <:mysql_password:>

Opentsdb.connect.mysql.ssl.enabled = <:ssl_enable:>
Opentsdb.connect.mysql.ssl.keyStore = <:install_root:>/certs/mysql/client.jks
Opentsdb.connect.mysql.ssl.keyStorePassword = <:ssl_password:>
Opentsdb.connect.mysql.ssl.trustStore = <:install_root:>/certs/mysql/truststore.jks
Opentsdb.connect.mysql.ssl.trustStorePassword = <:ssl_password:>

Server.bind = 0.0.0.0
Server.port = 5045
Server.timeoutSeconds = 15

# by default this is set to the # cores of the host
#Server.poolSize = 8

# This should be the min of all multi-line setting's timeoutSeconds!
Server.flush.delaySeconds = 5
Server.config.delaySeconds = 120

#Server.ssl.enabled = <:ssl_enable:>
Server.ssl.enabled = false
Server.ssl.certificate = <:install_root:>/certs/log-pp/server.crt
Server.ssl.key = <:install_root:>/certs/log-pp/server.p8
Server.ssl.ca = <:install_root:>/certs/log-pp/ca.crt
Server.ssl.verifyMode = FORCE_PEER

Server.secret.key = <:secret_key:>
