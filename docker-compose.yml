version: "3"

services:
  namenode:
    image: cloudwiz/hadoop-namenode
    container_name: namenode
    hostname: namenode
    volumes:
    - hadoop_namenode:/hadoop/dfs/name
    environment:
    - CLUSTER_NAME=prod
    env_file:
    - ./hadoop.env
    ports:
    - 50070:50070

  datanode:
    image: cloudwiz/hadoop-datanode
    container_name: datanode
    hostname: datanode
    volumes:
    - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    env_file:
    - ./hadoop.env
    ports:
    - 50075:50075
    depends_on:
    - namenode

  zookeeper:
    image: zookeeper:3.4.10
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888
    ports:
    - 2181:2181

  hbase-master:
    image: cloudwiz/hbase-master
    container_name: hbase-master
    hostname: hbase-master
    env_file:
    - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 zookeeper:2181"
    ports:
    - 16010:16010
    depends_on:
    - namenode
    - datanode
    - zookeeper

  hbase-regionserver:
    image: cloudwiz/hbase-regionserver
    container_name: hbase-regionserver
    hostname: hbase-regionserver
    env_file:
    - ./hadoop.env
    environment:
      HBASE_CONF_hbase_regionserver_hostname: hbase-regionserver
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 zookeeper:2181 hbase-master:16010"
    ports:
    - 16030:16030
    depends_on:
    - namenode
    - datanode
    - zookeeper
    - hbase-master

  mysql-server:
    image: cloudwiz/mysql
    container_name: mysql-server
    volumes:
    - ${WORK_PATH}/tools/mysql/sql/:/sql
    #- /usr/local/docker/mysql/conf/my.cnf:/etc/mysql/my.cnf
    #- /usr/local/docker/mysql/data/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306

  elasticsearch:
    image: elasticsearch:5.4.3
    container_name: elasticsearch
    hostname: es
    env_file:
    - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 zookeeper:2181 hbase-master:16010"
    ports:
    - 9200:9200
    - 9300:9300

  nginx:
    image: nginx:1.12.1
    container_name: nginx
    hostname: nginx
    env_file:
    - ./hadoop.env
    volumes:
    - ${WORK_PATH}/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    ports:
    - 80:80
    - 443:443

  kafka:
    image: wurstmeister/kafka:2.11-1.0.2
    container_name: kafka
    hostname: kafka
    env_file:
    - ./hadoop.env
    ports:
    - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#    - kafka:/var/run/docker.sock
    depends_on:
    - zookeeper

  metric-proxy:
    image: cloudwiz/metric-proxy
    container_name: metric-proxy
    hostname: metric-proxy
    env_file:
    - ./hadoop.env
    ports:
    - 4243:4243
    volumes:
    - ${WORK_PATH}/metric-proxy/bin/start.sh:/opt/cloudwiz-metric-proxy/bin/start.sh
    - ${WORK_PATH}/metric-proxy/config/application.yml:/opt/cloudwiz-metric-proxy/config/application.conf
    - ${WORK_PATH}/metric-proxy/config/log4j.properties:/opt/cloudwiz-metric-proxy/config/log4j.properties
    - ${WORK_PATH}/startup:/opt/startup
    depends_on:
    - kafka

  opentsdb:
    image: cloudwiz/opentsdb
    container_name: opentsdb
    hostname: opentsdb
    env_file:
    - ./hadoop.env
    ports:
    - 4242:4242
    volumes:
    - ${WORK_PATH}/opentsdb/bin/start.sh:/opt/opentsdb/bin/start.sh
    - ${WORK_PATH}/opentsdb/conf/opentsdb.conf:/opt/opentsdb/conf/opentsdb.conf
    - ${WORK_PATH}/opentsdb/conf/logback.xml:/opt/opentsdb/conf/logback.xml
    - ${WORK_PATH}/startup:/opt/startup
    depends_on:
    - hbase-regionserver
#    - metric-proxy


volumes:
  hadoop_namenode:
  hadoop_datanode:
  elasticsearch:
  zookeeper:
  nginx:
  kafka:
